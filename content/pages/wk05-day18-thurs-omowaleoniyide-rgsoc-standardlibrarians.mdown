Date: 31 July 2014
Author: Omowale Oniyide

# Finding Ways that Won't Work

Thursday, Week 5, Day 18, Wale, Jen, Pat, and Pivot Eric.

<b>Battle of The Gets</b>

Today we ran into issues with calling a specific status using Net::HTTP::get_response. Where Net::HTTP::Get worked on the page we were using Net::HTTP::get_response returned to us an  "Application Error". 

The mystery of Net::HTTP::get_response deepened when we tested it with outside websites and had successful returns. We then tried changing the status of the original page we were using but still encountered the “Application Error”. 

After being unsuccessful with Net::HTTP::get_response, Pivot Eric suggested we check out the file for the page [prettyp](http://featsofdaring.herokuapp.com/prettyp). At our next meeting we will follow his suggestion and hopefully solve the mystery. 

<hr />
<b>Things We Learned</b>

Wale learned the differences between Net::HTTP::Get  and Net::HTTP::get_response:
Net::HTTP::Get provides a string. 
Net::HTTP::get_response calls a specific part of the webpage. In our case we were using get_response to call for a web page status. 

Pivot Eric dived into what "|" (pronounced as "pipe") does. "|" allows you to pipe information from one program into other programs. 

Last we learned that Heroku cuts off webpages that take longer than 30 seconds to load. 

<b>Things We Were Reminded</b>

Pivot Eric reminded us to practice the good programming habit of not making many changes at once. We should make changes as small as possible in order to keep track of our errors. Making many changes once assumes we are perfect human beings that never make mistakes… and if we did make mistakes we are perfect human beings who can immediately catch them. No human is that perfect. 
